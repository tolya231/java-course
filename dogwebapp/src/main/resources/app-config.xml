<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--  dao-->
  <bean id="inMemoryDogDao" class="com.epam.repositories.inMemory.InMemoryDogDao"/>
  <bean id="jdbcDogDao" class="com.epam.repositories.jdbcDao.JdbcDogDao">
    <constructor-arg ref="jdbcTemplate"/>
  </bean>

<!--  service-->
  <bean id="dogService" class="com.epam.services.DogService">
    <constructor-arg ref="jdbcDogDao"/>
  </bean>

<!--  transactions-->
  <tx:annotation-driven transaction-manager="txManager"/>
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="h2dataSourceWithC3p0"/>
  </bean>


<!--  <tx:advice id="txAdvice" transaction-manager="txManager">-->
<!--    <tx:attributes>-->
<!--      <tx:method name="get*" read-only="true"/>-->
<!--      <tx:method name="*"/>-->
<!--    </tx:attributes>-->
<!--  </tx:advice>-->

<!--  <aop:config>-->
<!--    <aop:pointcut id="dogServiceOperation" expression="execution(* com.epam.services.*.*(..))"/>-->
<!--    <aop:advisor advice-ref="txAdvice" pointcut-ref="dogServiceOperation"/>-->
<!--  </aop:config>-->

<!--  <aop:aspectj-autoproxy/>-->
<!--  <bean id="transactionalAspect" class="com.epam.aop.aspects.TransactionalAspect">-->
<!--    <constructor-arg ref="h2dataSource"/>-->
<!--  </bean>-->

<!--  <bean id="dynamicDogServiceProxy" class="com.epam.services.transactions.TransactionalProxy"-->
<!--    factory-method="createProxy">-->
<!--    <constructor-arg ref="h2dataSource"/>-->
<!--    <constructor-arg>-->
<!--      <bean class="com.epam.services.DogService">-->
<!--        <constructor-arg ref="jdbcDogDao"/>-->
<!--      </bean>-->
<!--    </constructor-arg>-->
<!--    <constructor-arg value="com.epam.services.DogCrudService"/>-->
<!--  </bean>-->

<!--  <bean id="cjlibDogServiceProxy"-->
<!--    class="com.epam.services.transactions.CglibTransactionalDogService"-->
<!--    factory-method="createProxy">-->
<!--    <constructor-arg ref="h2dataSource"/>-->
<!--    <constructor-arg>-->
<!--      <bean class="com.epam.services.DogService">-->
<!--        <constructor-arg ref="jdbcDogDao"/>-->
<!--      </bean>-->
<!--    </constructor-arg>-->
<!--  </bean>-->


<!--  h2 datasource-->
  <bean id="h2dataSourceWithC3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method="close">
    <property name="driverClass" value="org.h2.Driver"/>
    <property name="jdbcUrl" value="jdbc:h2:mem:prod;DB_CLOSE_DELAY=-1;DATABASE_TO_LOWER=TRUE"/>
    <property name="user" value="admin"/>
    <property name="password" value="admin"/>
    <property name="minPoolSize" value="5"/>
    <property name="maxPoolSize" value="10"/>
    <property name="maxStatements" value="28"/>
    <property name="maxStatementsPerConnection" value="8"/>
  </bean>

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="h2dataSourceWithC3p0"/>
  </bean>

  <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">
    <property name="baselineOnMigrate" value="true"/>
    <property name="dataSource" ref="h2dataSourceWithC3p0"/>
  </bean>

  <!--h2-console-->
  <bean id="h2Server" class="org.h2.tools.Server" factory-method="createTcpServer"
    init-method="start"
    destroy-method="stop" depends-on="h2WebServer">
    <constructor-arg value="-tcp,-tcpAllowOthers,-tcpPort,9092"/>
  </bean>
  <bean id="h2WebServer" class="org.h2.tools.Server" factory-method="createWebServer"
    init-method="start"
    destroy-method="stop">
    <constructor-arg value="-web,-webAllowOthers,-webPort,8082"/>
  </bean>

</beans>
